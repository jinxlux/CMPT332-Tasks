/* NAME: Xudong Li
   NSID:xul395
   Student Number:11206927
*/

/* NAME:Tong Wang   
   NSID: tow087 
   Student Number: 11201222
   CMPT 332 Term 1 2019
   
   group: 25
*/


#include "list.h"
#include "rtthreads.h"
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <sys/ioctl.h>
#include <stdlib.h>
#include <stdio.h>
#include <net/if.h>
#include <unistd.h>
#include <fcntl.h>
#include <netdb.h>
#include <string.h>

/*Header file was not asked for, so defining function prototypes here*/
RTTTHREAD keyboardThread();

RTTTHREAD printToScreen();

RTTTHREAD receiveNetworkMsg();

RTTTHREAD sendOverNetwork();

LIST* sendBuffer = NULL;
LIST* showBuffer = NULL;

/*
 * Waits for input from keyboard
 * Once receives inputs, adds the message to a sender qeueue, notifys server thread
*/
RTTTHREAD keyboardThread(){
    printf("keyboardThread function need to be \n");
    char *input;
    for(;;){
        input = (char*)malloc(1024);
        while(read(0,input,1024) == -1);
        fcntl(0, F_SETFL, O_NONBLOCK);
        ListPrepend(sendBuffer,input);
        ListPrepend(showBuffer,input);
    }
}
/*
 * print information to screen when get the signal
 * 
*/
RTTTHREAD printToScreen(){
    printf("printToScreen function need to be \n");
}


/*
 * Waits for message(s) from machines over the network
 * 
*/
RTTTHREAD receiveNetworkMsg(){
    printf("receiveNetworkMsg function need to be \n");
    
}

/*
 * Sends message(s) to machines over the network
 * 
*/
RTTTHREAD sendOverNetwork(){
    printf("sendOverNetwork function need to be \n");
}

int mainp(int argc, char **argv){
    printf("mainp function need to be \n");
    sendBuffer = ListCreate();
    showBuffer = ListCreate();
    int pid;
    RttThreadId *rtID;
    rtID = (RttThreadId *)malloc(sizeof(RttThreadId));
    RttSchAttr sch;
    sch.startingtime = RTTZEROTIME;
    sch.priority = RTTNORM;
    sch.deadline = RTTNODEADLINE;
    pid = RttCreate(rtID, (void(*)()) printToScreen, 16000, NULL, NULL, sch, RTTUSR);
    pid = RttCreate(rtID, (void(*)()) keyboardThread, 16000, NULL, NULL, sch, RTTUSR);


    return 0;
}