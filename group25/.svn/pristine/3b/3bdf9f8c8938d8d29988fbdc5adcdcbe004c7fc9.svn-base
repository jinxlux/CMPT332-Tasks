#include <stdio.h>
#include <stdlib.h>
#include "list.h"

int ListAdd(LIST *list, Item item)
{	
	printf("Got to procedure ListAdd \n");
	if(list == NULL){
		printf("Error in ListAdd : invalid parameter list = NULL \n");
		return -1;
	}
	else if(list -> current == NULL){
		printf("Error in procedure ListAdd: current item in list is Null \n");
		return -1;
	}
	return 0;
}

LIST *ListCreate()
{
	printf("Got to procedure ListCreate \n");

	return NULL;
}

int ListInsert(LIST *list, Item item)
{	
	printf("Got to procedure ListInsert \n");
	if(list == NULL){
		printf("Error in ListInsert : invalid parameter list = NULL \n");
		return -1;
	}
	else if(list -> current == NULL){
		printf("Error in procedure ListInsert: current item in list is Null \n");
		return -1;
	}
	

	return 0;
}

int ListAppend(LIST *list, Item item)
{
	printf("Got to procedure ListAppend \n");
	if(list == NULL){
		printf("Error in ListAppend : invalid parameter list = NULL \n");
		return -1;
	}
	return 0;
}
int ListPrepend(LIST *list, Item item)
{
	printf("Got to procedure ListPrepend \n");
	if(list == NULL){
		printf("Error in ListPrepend : invalid parameter list = NULL \n");
		return -1;
	}

	return 0;
}
void ListConcat(LIST *list1,LIST *list2)
{
	printf("Got to procedure ListConcat \n");
	if(list1 == NULL || list2 == NULL){
		printf("Error in ListConcat : invalid parameter list = NULL \n");
	}
	
}
